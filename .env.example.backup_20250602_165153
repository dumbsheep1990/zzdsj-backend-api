# ===============================================================================
# 系统基础配置（所有强制依赖项）
# ===============================================================================

# ----- 基础服务配置 -----
SERVICE_NAME=knowledge-qa-backend
SERVICE_IP=127.0.0.1
SERVICE_PORT=8000

# ----- 域名和安全配置 -----
# 调试模式（开启则关闭所有限制）
DEBUG_MODE=False

# 域名绑定配置
BASE_URL=http://localhost:8000     # 系统基础URL，用于生成完整访问地址
ALLOWED_HOSTS=["localhost", "127.0.0.1"]  # 允许访问的域名列表，JSON格式

# CORS跨域配置
CORS_ENABLED=True                  # 是否启用CORS
CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]  # 允许的跨域来源
CORS_ALLOW_CREDENTIALS=True        # 是否允许携带认证信息

# 请求限制配置
REQUEST_LIMITING_ENABLED=True      # 是否启用请求限制
REQUEST_RATE_LIMIT=60/minute       # 每分钟允许的请求数

# ----- PostgreSQL数据库配置（必需） -----
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/knowledge_qa

# ----- Redis缓存服务配置（必需） -----
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# ----- MinIO对象存储配置（必需） -----
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_SECURE=False
MINIO_BUCKET=knowledge-docs

# ----- Milvus向量数据库配置（必需） -----
MILVUS_HOST=localhost
MILVUS_PORT=19530
MILVUS_COLLECTION=document_vectors

# ----- Elasticsearch配置（必需） -----
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
ELASTICSEARCH_INDEX=document_index

# ----- RabbitMQ消息队列配置（必需） -----
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest

# ----- Nacos服务发现配置（必需） -----
NACOS_SERVER_ADDRESSES=127.0.0.1:8848
NACOS_NAMESPACE=public
NACOS_GROUP=DEFAULT_GROUP

# ----- InfluxDB时序数据库配置（必需） -----
INFLUXDB_URL=http://localhost:8086
INFLUXDB_TOKEN=
INFLUXDB_ORG=knowledge_qa_org
INFLUXDB_BUCKET=llm_metrics

# ===============================================================================
# 系统功能配置（系统特性和功能）
# ===============================================================================

# ----- 认证与安全配置 -----
JWT_SECRET_KEY=23f0767704249cd7be7181a0dad23c74e0739c98ce54d7140fc2e94dfa584fb0
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# ----- CORS跨域配置 -----
# CORS_ORIGINS=http://localhost,http://localhost:3000,http://localhost:8080,*

# ----- 文档处理配置 -----
DOCUMENT_SPLITTER_TYPE=sentence
DOCUMENT_CHUNK_SIZE=1000
DOCUMENT_CHUNK_OVERLAP=200
DOCUMENT_PROCESSING_CONCURRENCY=4

# ----- Celery任务队列配置 -----
CELERY_BROKER_URL=amqp://guest:guest@localhost:5672//
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ===============================================================================
# 大语言模型配置（至少需要配置一个模型提供商）
# ===============================================================================

# ----- LLM基础配置 -----
OPENAI_API_KEY=your-openai-api-key
DEFAULT_MODEL=gpt-4

# ----- OpenAI模型配置 -----
OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_ORGANIZATION=

# ----- 国内模型提供商配置 -----
# 智谱AI/GLM配置
ZHIPU_API_KEY=
GLM_API_KEY=
GLM_API_BASE=https://open.bigmodel.cn/api/paas/v4

# 百度文心一言配置
BAIDU_API_KEY=
BAIDU_SECRET_KEY=
BAIDU_API_BASE=https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop

# 月之暗面配置
MOONSHOT_API_KEY=
MOONSHOT_API_BASE=https://api.moonshot.cn/v1

# MiniMax配置
MINIMAX_API_KEY=
MINIMAX_GROUP_ID=
MINIMAX_API_BASE=https://api.minimax.chat/v1

# 通义千问/千问API配置
DASHSCOPE_API_KEY=
QWEN_API_KEY=
QWEN_API_BASE=https://dashscope.aliyuncs.com/api/v1

# 百川配置
BAICHUAN_API_KEY=
BAICHUAN_SECRET_KEY=
BAICHUAN_API_BASE=https://api.baichuan-ai.com/v1

# ----- 其他模型提供商配置 -----
# DeepSeek配置
DEEPSEEK_API_KEY=
DEEPSEEK_API_BASE=https://api.deepseek.com/v1

# Anthropic配置
ANTHROPIC_API_KEY=
ANTHROPIC_API_BASE=https://api.anthropic.com

# TogetherAI配置
TOGETHER_API_KEY=
TOGETHER_API_BASE=https://api.together.xyz/v1

# ----- 本地部署模型配置 -----
# Ollama配置
OLLAMA_API_BASE=http://localhost:11434

# VLLM配置
VLLM_API_BASE=http://localhost:8000

# ===============================================================================
# 扩展服务部署配置
# ===============================================================================

# ----- SearxNG搜索服务部署配置 -----
# 基本配置
SEARXNG_ENABLED=True
SEARXNG_AUTO_DEPLOY=True
SEARXNG_HOST=localhost
SEARXNG_PORT=8888

# Docker部署配置
SEARXNG_DOCKER_IMAGE=searxng/searxng:latest
SEARXNG_CONTAINER_NAME=searxng
SEARXNG_BIND_PORT=8888:8080
SEARXNG_INSTANCE_NAME=智政搜索服务
SEARXNG_BASE_URL=http://localhost:8888/
SEARXNG_BIND_ADDRESS=0.0.0.0:8080
SEARXNG_NETWORK_NAME=search_network
SEARXNG_SETTINGS_PATH=./docker/searxng/settings.yml
SEARXNG_HEALTH_CHECK_INTERVAL=30s
SEARXNG_HEALTH_CHECK_RETRIES=3

# ----- LightRAG后端服务部署配置 -----
# 基本配置
LIGHTRAG_ENABLED=True
LIGHTRAG_BASE_DIR=./data/lightrag
LIGHTRAG_EMBEDDING_DIM=1536
LIGHTRAG_MAX_TOKEN_SIZE=8192

# 存储配置
LIGHTRAG_GRAPH_DB_TYPE=file  # 可选: file, postgres, redis
LIGHTRAG_PG_HOST=lightrag-postgres
LIGHTRAG_PG_PORT=5432
LIGHTRAG_PG_USER=postgres
LIGHTRAG_PG_PASSWORD=password
LIGHTRAG_PG_DB=lightrag
LIGHTRAG_REDIS_HOST=localhost
LIGHTRAG_REDIS_PORT=6379
LIGHTRAG_REDIS_DB=1
LIGHTRAG_REDIS_PASSWORD=

# 高级配置
LIGHTRAG_USE_SEMANTIC_CHUNKING=False
LIGHTRAG_USE_KNOWLEDGE_GRAPH=False
LIGHTRAG_KG_RELATION_THRESHOLD=0.7
LIGHTRAG_MAX_WORKERS=4

# Docker部署配置
LIGHTRAG_DOCKER_IMAGE=hkuds/lightrag:latest
LIGHTRAG_CONTAINER_NAME=lightrag-api
LIGHTRAG_PORT=9621
LIGHTRAG_DATA_PATH=./docker/lightrag/data
LIGHTRAG_NETWORK_NAME=app-network
LIGHTRAG_WORKDIR_ENABLED=true
LIGHTRAG_DEFAULT_WORKDIR=default
LIGHTRAG_HEALTH_CHECK_INTERVAL=30s
LIGHTRAG_RESTART_POLICY=unless-stopped

# ===============================================================================
# 框架和集成配置
# ===============================================================================

# ----- LlamaIndex配置 -----
# 注意：系统已从 LangChain 迁移到 LlamaIndex作为统一入口
# 基础配置
EMBEDDING_MODEL=text-embedding-ada-002
CHAT_MODEL=gpt-3.5-turbo
MEMORY_TYPE=conversation_buffer
MEMORY_K=5

# ----- 高级工具配置 -----
ADVANCED_TOOLS_ENABLED=true  # 是否启用高级工具

# ----- 重排序模型配置 -----
# 基础配置
RERRANK_ENABLED=true
DEFAULT_RERANK_MODEL=cross_encoder_miniLM

# 本地跨编码器模型
RERRANK_CROSS_ENCODER_MINIML_ENABLED=true
RERRANK_CROSS_ENCODER_MINIML_PATH=cross-encoder/ms-marco-MiniLM-L-6-v2
RERRANK_CROSS_ENCODER_MULTILINGUAL_ENABLED=true
RERRANK_CROSS_ENCODER_MULTILINGUAL_PATH=cross-encoder/mmarco-mMiniLMv2-L12-H384-v1

# OpenAI 重排序模型
RERRANK_OPENAI_ENABLED=false
RERRANK_OPENAI_MODEL_ID=text-embedding-3-large
RERRANK_OPENAI_API_BASE=https://api.openai.com
RERRANK_OPENAI_API_PATH=/v1/reranking

# 百度文心重排序模型
RERRANK_BAIDU_ENABLED=false
RERRANK_BAIDU_MODEL_ID=ernie-rerank
RERRANK_BAIDU_API_BASE=https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/rerank
RERRANK_BAIDU_API_KEY=
RERRANK_BAIDU_SECRET_KEY=

# 智谱AI重排序模型
RERRANK_ZHIPU_ENABLED=false
RERRANK_ZHIPU_MODEL_ID=rerank-8k
RERRANK_ZHIPU_API_BASE=https://open.bigmodel.cn/api/paas/v4
RERRANK_ZHIPU_API_PATH=/rerank
RERRANK_ZHIPU_API_KEY=

# 向量存储配置
LLAMAINDEX_INDEX_TYPE=vector_store
LLAMAINDEX_DEFAULT_STORE=elasticsearch
LLAMAINDEX_CHUNK_SIZE=1000
LLAMAINDEX_CHUNK_OVERLAP=200

# 框架集成端点
FRAMEWORK_ENTRY_POINT=llamaindex

# ===============================================================================
# 可选功能配置
# ===============================================================================

# ----- 敏感词过滤配置 -----
SENSITIVE_WORD_FILTER_TYPE=local
SENSITIVE_WORD_FILTER_RESPONSE=很抱歉，您的消息包含敏感内容，请调整后重新发送。
SENSITIVE_WORD_DICT_PATH=
SENSITIVE_WORD_CACHE_ENABLED=True
SENSITIVE_WORD_CACHE_TTL=3600

# ----- 语音功能配置 -----
# 仅当启用时需要配置
VOICE_ENABLED=False

# 语音转文本(STT)配置
STT_MODEL_NAME=xunfei-stt
STT_LANGUAGE=zh-CN
STT_SAMPLING_RATE=16000

# 文本转语音(TTS)配置
TTS_MODEL_NAME=xunfei-tts
TTS_VOICE=xiaoyan
TTS_SPEED=50
TTS_AUDIO_FORMAT=mp3

# 讯飞语音服务配置
XUNFEI_APP_ID=
XUNFEI_API_KEY=
XUNFEI_API_SECRET=

# 阿里云语音服务配置
ALIYUN_ACCESS_KEY_ID=
ALIYUN_ACCESS_KEY_SECRET=
ALIYUN_SPEECH_APPKEY=

# ----- 日志系统配置 -----
# 日志基本设置
LOG_LEVEL=INFO                   # 日志级别：DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=text                  # 日志格式: text 或 json (结构化日志)

# 控制台日志设置
LOG_CONSOLE_ENABLED=True        # 是否输出到控制台
LOG_CONSOLE_LEVEL=              # 留空则使用 LOG_LEVEL

# 文件日志设置
LOG_FILE_ENABLED=False          # 是否输出到文件
LOG_FILE_LEVEL=                 # 留空则使用 LOG_LEVEL
LOG_FILE_PATH=logs/app.log      # 日志文件路径
LOG_FILE_ROTATION=daily         # 日志轮换周期: daily, weekly, monthly
LOG_FILE_RETENTION=30           # 日志保留天数

# 请求日志设置
LOG_REQUEST_ENABLED=True        # 是否启用请求日志中间件
LOG_REQUEST_LEVEL=              # 留空则使用 LOG_LEVEL
LOG_REQUEST_BODY=False          # 是否记录请求体内容
LOG_RESPONSE_BODY=False         # 是否记录响应体内容

# 模块特定日志级别
LOG_MODULE_LEVELS='{"app.api": "INFO", "app.core": "INFO", "app.utils": "INFO"}'  # JSON格式

# ----- MCP服务部署配置 -----
# 基本配置
MCP_ENABLED=True                    # 是否启用MCP服务
MCP_AUTO_DEPLOY=True                # 是否在启动时自动部署MCP服务
MCP_DEFAULT_PORT_RANGE=10000-65000   # MCP服务默认端口范围
MCP_DEPLOYMENTS_DIR=./data/deployments  # MCP部署配置存储目录

# MCP自动部署配置
MCP_DEFAULT_TOOLS=["search_web", "python", "terminal", "file_operations"]  # 默认工具集

# Docker部署配置
MCP_DOCKER_COMPOSE_MODE=builtin      # 使用的docker-compose模式: builtin(内置) 或 custom(自定义)
MCP_DOCKER_COMPOSE_PATH=             # 自定义docker-compose文件路径，当模式为custom时生效
MCP_BUILTIN_COMPOSE_DIR=./docker/mcp  # 内置模板文件存放目录

# MCP服务注册配置
MCP_REGISTER_TO_NACOS=True          # 是否将MCP服务注册到Nacos
MCP_SERVICE_NAME_PREFIX=mcp-service  # MCP服务名称前缀
MCP_HEALTH_CHECK_INTERVAL=60        # 健康检查间隔（秒）

# MCP日志配置
MCP_LOG_LEVEL=INFO                  # MCP日志级别
MCP_LOG_DIR=./logs/mcp              # MCP日志目录
MCP_LOG_MAX_SIZE=10                 # 日志文件最大大小（MB）
MCP_LOG_BACKUP_COUNT=5              # 日志文件备份数量

# ----- 指标统计配置 -----
METRICS_ENABLED=False              # 是否启用指标统计
METRICS_EXPORT_INTERVAL=15        # 指标导出间隔（秒）

# InfluxDB统计配置 
INFLUXDB_URL=http://localhost:8086
INFLUXDB_TOKEN=
INFLUXDB_ORG=knowledge_qa_org
INFLUXDB_BUCKET=llm_metrics

# ===============================================================================
# OWL智能体工具配置
# ===============================================================================
# 基础配置
OWL_TOOLS_ENABLED=true               # 是否启用OWL工具系统
OWL_TOOLS_TIMEOUT_SECONDS=30         # 工具执行超时时间（秒）
OWL_TOOLS_MAX_CONCURRENT=5           # 最大并发工具数量
OWL_TOOLS_DEFAULT_LLM=gpt-4-turbo    # 工具调用的默认模型
OWL_TOOLS_USE_CACHE=true             # 是否启用工具结果缓存
OWL_TOOLS_CACHE_TTL=3600             # 缓存有效期（秒）

# ----- LLM工具配置 -----
OWL_TOOL_LLM_ENABLED=true             # 是否启用LLM工具
OWL_TOOL_LLM_MODEL=gpt-4-turbo        # 默认使用的LLM模型(从系统配置的模型中选择)
OWL_TOOL_LLM_TEMPERATURE=0.7          # 模型生成温度
OWL_TOOL_LLM_TOP_P=0.95               # top-p采样参数
OWL_TOOL_LLM_MAX_TOKENS=4096          # 最大生成token数
OWL_TOOL_LLM_TIMEOUT=60               # 调用超时时间（秒）

# ----- 搜索工具配置 -----
OWL_TOOL_SEARCH_ENABLED=true          # 是否启用搜索工具
OWL_TOOL_SEARCH_ENGINE=searxng         # 默认搜索引擎(searxng,bing,google,duckduckgo)
OWL_TOOL_SEARCH_MAX_RESULTS=5         # 最大结果数量
OWL_TOOL_SEARCH_API_TIMEOUT=10        # API超时时间（秒）
OWL_TOOL_SEARCH_ENABLE_FILTER=true    # 是否启用结果过滤
OWL_TOOL_SEARCH_RESULT_TYPE=full      # 搜索结果类型(full,snippet,url)
OWL_TOOL_SEARCH_SAFE_SEARCH=moderate  # 安全搜索级别(off,moderate,strict)

# SearXNG搜索引擎配置
OWL_TOOL_SEARCH_SEARXNG_URL=http://localhost:8888/  # SearXNG服务URL
OWL_TOOL_SEARCH_SEARXNG_CATEGORIES=general           # 搜索类别(general,images,news,science)

# ----- 文档处理工具配置 -----
OWL_TOOL_DOCUMENT_ENABLED=true                 # 是否启用文档工具
OWL_TOOL_DOCUMENT_MAX_FILE_SIZE_MB=50         # 最大文件大小(MB)
OWL_TOOL_DOCUMENT_SUPPORTED_FORMATS=pdf,docx,txt,xlsx,pptx,md # 支持的文件格式
OWL_TOOL_DOCUMENT_EXTRACT_IMAGES=true          # 是否提取文档中的图片
OWL_TOOL_DOCUMENT_OCR_ENABLED=true             # 是否启用OCR识别

# 文档分割器配置
OWL_TOOL_DOCUMENT_SPLITTER_TYPE=sentence       # 分割器类型(sentence,chunk,token)
OWL_TOOL_DOCUMENT_CHUNK_SIZE=1000              # 文本块大小
OWL_TOOL_DOCUMENT_CHUNK_OVERLAP=200           # 文本块重叠量

# ----- 知识库检索工具配置 -----
OWL_TOOL_KNOWLEDGE_ENABLED=true               # 是否启用知识库工具
OWL_TOOL_KNOWLEDGE_MAX_CHUNKS=10              # 最大知识块数量
OWL_TOOL_KNOWLEDGE_SIMILARITY_THRESHOLD=0.75  # 相似度阈值
OWL_TOOL_KNOWLEDGE_INCLUDE_METADATA=true      # 是否包含元数据
OWL_TOOL_KNOWLEDGE_RETURN_SOURCE_DOCUMENTS=true # 是否返回源文档信息
OWL_TOOL_KNOWLEDGE_EMBEDDING_MODEL=text-embedding-3-large # 使用的嵌入模型(从系统配置中选择)

# ----- API调用工具配置 -----
OWL_TOOL_API_ENABLED=true                # 是否启用API调用工具
OWL_TOOL_API_MAX_REQUESTS_PER_MIN=30    # 每分钟最大请求数
OWL_TOOL_API_DEFAULT_TIMEOUT=15         # 默认超时时间（秒）
OWL_TOOL_API_RETRY_ATTEMPTS=3           # 重试次数
OWL_TOOL_API_ALLOW_HTTP=false           # 是否允许非加密HTTP请求
OWL_TOOL_API_ALLOWED_DOMAINS=           # 允许的域名列表，用逗号分隔，留空则不限制

# ----- 代码执行工具配置 -----
OWL_TOOL_CODE_EXEC_ENABLED=false                    # 是否启用代码执行工具
OWL_TOOL_CODE_EXEC_TIMEOUT=5                       # 执行超时时间（秒）
OWL_TOOL_CODE_EXEC_ALLOWED_LANGUAGES=python,javascript # 允许的语言
OWL_TOOL_CODE_EXEC_MAX_MEMORY_MB=100               # 最大内存使用量(MB)
OWL_TOOL_CODE_EXEC_ENABLE_NETWORK=false            # 是否允许网络访问
OWL_TOOL_CODE_EXEC_ENABLE_FILE_SYSTEM=false        # 是否允许文件系统访问

# ----- LlamaIndex工具包配置 -----
OWL_TOOLKIT_LLAMAINDEX_ENABLED=true                # 是否启用LlamaIndex工具包
OWL_TOOLKIT_LLAMAINDEX_RETRIEVAL_ENABLED=true      # 是否启用知识检索工具
OWL_TOOLKIT_LLAMAINDEX_PROCESSING_ENABLED=true     # 是否启用文档处理工具
OWL_TOOLKIT_LLAMAINDEX_VECTOR_SEARCH_ENABLED=true  # 是否启用向量检索工具
OWL_TOOLKIT_LLAMAINDEX_ANALYSIS_ENABLED=true       # 是否启用文本分析工具

# ----- MCP工具包配置 -----
OWL_TOOLKIT_MCP_ENABLED=true                       # 是否启用MCP工具包
OWL_TOOLKIT_MCP_CONFIG_PATH=config/mcp_tools.json  # MCP工具配置文件路径
OWL_TOOLKIT_MCP_AUTO_CONNECT=true                  # 是否自动连接MCP服务

# ----- 外部工具包集成配置 -----
# 自动加载的外部工具包，用逗号分隔
OWL_EXTERNAL_TOOLKITS=SearchToolkit,ImageAnalysisToolkit

# 各工具包配置
OWL_TOOLKIT_SEARCH_ENABLED=true                   # 是否启用搜索工具包
OWL_TOOLKIT_IMAGE_ANALYSIS_ENABLED=true           # 是否启用图像分析工具包
OWL_TOOLKIT_ARXIV_ENABLED=false                   # 是否启用Arxiv工具包
OWL_TOOLKIT_CODE_EXECUTION_ENABLED=false          # 是否启用代码执行工具包