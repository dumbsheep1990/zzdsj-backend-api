services:
  # AI助手应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_assistant_app
    ports:
      - "8000:8000"  # 直接暴露应用端口
    environment:
      - DATABASE_URL=postgresql://postgres:securepassword123@db:5432/ai_assistant
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=development-secret-key-change-in-production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000,http://127.0.0.1:8080
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - ai_network

  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: ai_assistant_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=securepassword123
      - POSTGRES_DB=ai_assistant
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ai_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ai_assistant_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - ai_network

  # 数据库管理工具（强烈建议保留）
  pgadmin:
    image: dpage/pgadmin4
    container_name: ai_assistant_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - ai_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ai_network:
    driver: bridge