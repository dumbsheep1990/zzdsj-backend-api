# ===================================================================
# 向量数据库配置示例
# ===================================================================

# ===================================================================
# 自动初始化配置
# ===================================================================

# 是否启用向量数据库自动初始化 (true/false)
VECTOR_DB_AUTO_INIT=true

# 主要向量数据库后端 (milvus/pgvector/elasticsearch)
VECTOR_DB_PRIMARY_BACKEND=milvus

# 备用后端列表 (逗号分隔)
VECTOR_DB_FALLBACK_BACKENDS=pgvector,elasticsearch

# 自动创建的集合列表 (逗号分隔)
VECTOR_DB_AUTO_CREATE_COLLECTIONS=document_collection,knowledge_base_collection

# 默认向量维度
VECTOR_DB_DEFAULT_DIMENSION=1536

# 批量操作大小
VECTOR_DB_BATCH_SIZE=1000

# 最大连接数
VECTOR_DB_MAX_CONNECTIONS=10

# ===================================================================
# Milvus 配置
# ===================================================================

# Milvus 连接配置
MILVUS_HOST=localhost
MILVUS_PORT=19530
MILVUS_USER=
MILVUS_PASSWORD=
MILVUS_SECURE=false
MILVUS_TIMEOUT=10

# 生产环境示例：
# MILVUS_HOST=milvus-cluster.example.com
# MILVUS_PORT=443
# MILVUS_USER=milvus_user
# MILVUS_PASSWORD=your_password
# MILVUS_SECURE=true
# MILVUS_TIMEOUT=30

# ===================================================================
# PostgreSQL+pgvector 配置
# ===================================================================

# 方式1: 使用完整的数据库URL
PGVECTOR_DATABASE_URL=postgresql://postgres:password@localhost:5432/postgres

# 方式2: 分别配置参数（如果没有DATABASE_URL，将使用这些参数）
PGVECTOR_HOST=localhost
PGVECTOR_PORT=5432
PGVECTOR_USER=postgres
PGVECTOR_PASSWORD=password
PGVECTOR_DATABASE=postgres
PGVECTOR_SCHEMA=public
PGVECTOR_TIMEOUT=10

# 生产环境示例：
# PGVECTOR_DATABASE_URL=postgresql://pguser:secure_password@postgres-cluster.example.com:5432/vector_db
# PGVECTOR_SCHEMA=vectors
# PGVECTOR_TIMEOUT=30

# ===================================================================
# Elasticsearch 配置
# ===================================================================

# Elasticsearch 连接配置
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
ELASTICSEARCH_API_KEY=
ELASTICSEARCH_TIMEOUT=30

# 生产环境示例：
# ELASTICSEARCH_URL=https://es-cluster.example.com:9200
# ELASTICSEARCH_USERNAME=elastic
# ELASTICSEARCH_PASSWORD=your_password
# ELASTICSEARCH_API_KEY=your_api_key
# ELASTICSEARCH_TIMEOUT=60

# ===================================================================
# 使用场景配置示例
# ===================================================================

# 场景1：开发环境 - 使用Milvus
# VECTOR_DB_PRIMARY_BACKEND=milvus
# VECTOR_DB_FALLBACK_BACKENDS=
# MILVUS_HOST=localhost
# MILVUS_PORT=19530

# 场景2：测试环境 - 使用PostgreSQL+pgvector
# VECTOR_DB_PRIMARY_BACKEND=pgvector
# VECTOR_DB_FALLBACK_BACKENDS=
# PGVECTOR_DATABASE_URL=postgresql://test:test@localhost:5432/testdb

# 场景3：小规模生产 - PostgreSQL主，Milvus备用
# VECTOR_DB_PRIMARY_BACKEND=pgvector
# VECTOR_DB_FALLBACK_BACKENDS=milvus
# PGVECTOR_DATABASE_URL=postgresql://prod:secure@db.example.com:5432/proddb
# MILVUS_HOST=milvus.example.com
# MILVUS_PORT=19530

# 场景4：大规模生产 - Milvus主，ES备用
# VECTOR_DB_PRIMARY_BACKEND=milvus
# VECTOR_DB_FALLBACK_BACKENDS=elasticsearch
# MILVUS_HOST=milvus-cluster.example.com
# MILVUS_PORT=443
# MILVUS_SECURE=true
# ELASTICSEARCH_URL=https://es-cluster.example.com:9200

# 场景5：多后端高可用
# VECTOR_DB_PRIMARY_BACKEND=milvus
# VECTOR_DB_FALLBACK_BACKENDS=pgvector,elasticsearch
# MILVUS_HOST=milvus.example.com
# PGVECTOR_DATABASE_URL=postgresql://user:pass@pg.example.com:5432/db
# ELASTICSEARCH_URL=https://es.example.com:9200

# ===================================================================
# 性能调优建议
# ===================================================================

# 高并发场景
# VECTOR_DB_MAX_CONNECTIONS=50
# VECTOR_DB_BATCH_SIZE=2000
# MILVUS_TIMEOUT=60
# PGVECTOR_TIMEOUT=30
# ELASTICSEARCH_TIMEOUT=90

# 低延迟场景
# VECTOR_DB_BATCH_SIZE=500
# MILVUS_TIMEOUT=5
# PGVECTOR_TIMEOUT=5
# ELASTICSEARCH_TIMEOUT=10

# 大规模数据场景
# VECTOR_DB_DEFAULT_DIMENSION=768  # 使用较小的向量维度
# VECTOR_DB_BATCH_SIZE=5000
# MILVUS_TIMEOUT=120 