# ==============================================================================
# 开发环境配置文件
# 启用调试功能和开发工具，便于本地开发调试
# ==============================================================================

# 应用基础配置
app:
  name: "知识QA系统-开发版"
  environment: "development"
  debug: true
  
# 服务配置
service:
  ip: "127.0.0.1"
  port: 8000
  workers: 1
  
# 日志配置
logging:
  level: "DEBUG"
  format: "detailed"
  file_enabled: true
  console_enabled: true
  
# 安全配置
security:
  cors:
    enabled: true
    origins: 
      - "http://localhost:3000"
      - "http://localhost:8080"
      - "http://127.0.0.1:3000"
      - "http://127.0.0.1:8080"
  rate_limiting:
    enabled: false
    
# 数据库配置（开发环境使用SQLite）
database:
  url: "sqlite:///./dev.db"
  echo: true
  
# Redis配置
redis:
  host: "localhost"
  port: 6379
  db: 0
  password: null
  
# MinIO存储配置
storage:
  minio:
    endpoint: "localhost:9000"
    access_key: "minioadmin"
    secret_key: "minioadmin"
    bucket: "dev-knowledge-docs"
    secure: false
    
# 向量存储配置
vector_store:
  milvus:
    host: "localhost"
    port: 19530
    collection: "knowledge_base_dev"
    
# 搜索服务配置
search:
  elasticsearch:
    url: "http://localhost:9200"
    index: "knowledge_docs_dev"
    
# AI模型配置
ai:
  openai:
    api_key: "${OPENAI_API_KEY}"
    model: "gpt-3.5-turbo"
    temperature: 0.3
    max_tokens: 2000
    
# 文档处理配置
document:
  max_file_size: "100MB"  # 开发环境允许更大文件
  chunk_size: 800
  chunk_overlap: 100
  
# 缓存配置
cache:
  default_ttl: 600  # 开发环境较短缓存时间
  max_size: 500
  
# 功能开关（开发环境启用更多功能）
features:
  voice_enabled: true
  metrics_enabled: true
  admin_panel_enabled: true
  api_docs_enabled: true
  cors_enabled: true
  debug_tools: true
  hot_reload: true
  mock_services: true
  
# 监控配置
monitoring:
  health_check_enabled: true
  metrics_enabled: false
  prometheus_enabled: false
  
# 任务队列配置
task_queue:
  broker_url: "redis://localhost:6379/1"
  result_backend: "redis://localhost:6379/2"
  max_retries: 1  # 开发环境减少重试次数
  
# WebSocket配置
websocket:
  enabled: true
  max_connections: 50
  
# API配置
api:
  title: "知识QA系统API - 开发版"
  description: "开发环境API，包含调试和测试功能"
  rate_limit_enabled: false
  pagination_default_size: 10

# 开发专用配置
development:
  auto_reload: true
  profiler_enabled: true
  sql_debug: true
  template_debug: true
  static_debug: true
  
# ==============================================================================
# 开发环境特性
# ==============================================================================
# 
# 1. 启用调试模式和详细日志
# 2. 禁用速率限制便于测试
# 3. 启用热重载和开发工具
# 4. 允许跨域访问前端开发服务器
# 5. 使用开发专用的数据库和存储
# 6. 较短的缓存时间便于调试
# 7. 启用性能分析和SQL调试
# ==============================================================================

# ==============================================================================
# 向量数据库配置 - 开发环境
# ==============================================================================

vector_database:
  # 自动初始化配置
  auto_init:
    enabled: true
    primary_backend: "milvus"
    fallback_backends: ["pgvector"]
    auto_create_collections: 
      - "document_collection"
      - "knowledge_base_collection"
    retry_attempts: 2
    retry_delay: 3
    health_check_enabled: true
    health_check_interval: 120  # 开发环境检查间隔可以长一些
    auto_failover: true
    failover_threshold: 2

  # 通用参数 - 开发环境调优
  common:
    default_dimension: 1536
    batch_size: 500  # 开发环境使用较小的批次
    max_connections: 5
    connection_timeout: 15
    query_timeout: 30

  # Milvus配置 - 开发环境
  milvus:
    connection:
      host: "localhost"
      port: 19530
      user: ""
      password: ""
      secure: false
      timeout: 10
      connection_alias: "dev"
    
    # 性能配置 - 开发环境优化
    performance:
      insert_buffer_size: 67108864  # 64MB
      index_building_memory_limit: 1073741824  # 1GB
      segment_size_mb: 256
      auto_flush_interval: 10
      search_timeout: 15
      insert_timeout: 30

  # PostgreSQL+pgvector配置 - 开发环境
  pgvector:
    connection:
      database_url: "postgresql://postgres:password@localhost:5432/dev_vectors"
      host: "localhost"
      port: 5432
      user: "postgres"
      password: "password"
      database: "dev_vectors"
      schema_name: "public"
      timeout: 10
      pool_size: 5
      max_overflow: 10
    
    # 性能配置 - 开发环境优化
    performance:
      maintenance_work_mem: "512MB"
      effective_cache_size: "2GB"
      shared_preload_libraries: "vector"
      vector_index_scan_threshold: 500

  # Elasticsearch配置 - 开发环境
  elasticsearch:
    connection:
      es_url: "http://localhost:9200"
      username: ""
      password: ""
      api_key: ""
      timeout: 20
      max_retries: 2
      retry_delay: 1
      use_ssl: false
      verify_certs: false
    
    # 性能配置 - 开发环境优化
    performance:
      bulk_size: 500
      bulk_timeout: "30s"
      max_concurrent_searches: 3
      search_timeout: "15s"
      index_timeout: "30s"

  # 监控配置 - 开发环境
  monitoring:
    enabled: true
    metrics_collection: true
    health_check_interval: 120
    performance_monitoring: false  # 开发环境关闭性能监控
    alert_thresholds:
      connection_failure_count: 2
      query_timeout_ms: 30000
      insert_timeout_ms: 60000
      memory_usage_percent: 70
      disk_usage_percent: 80
    
    # 日志配置 - 开发环境详细日志
    logging:
      level: "DEBUG"
      enable_query_logging: true
      enable_performance_logging: true
      log_slow_queries: true
      slow_query_threshold_ms: 500

  # 集成配置 - 开发环境
  integration:
    config_manager:
      use_advanced_config: true
      config_validation: true
      auto_reload: true  # 开发环境启用自动重载
      cache_config: false  # 开发环境禁用缓存，确保配置实时生效
      cache_ttl: 60

# ==============================================================================
# 开发环境说明
# ==============================================================================
# 
# 开发环境配置特点：
# 1. 启用详细的调试日志和性能监控
# 2. 使用较小的批次大小和连接池
# 3. 启用配置自动重载
# 4. 较短的超时时间，快速失败
# 5. 简化的认证配置
# 
# 向量数据库开发环境设置：
# 1. 主要使用Milvus，PostgreSQL作为备用
# 2. 启用健康检查和故障转移
# 3. 详细的日志记录，便于调试
# 4. 较小的性能参数，适合开发机器
# ============================================================================== 